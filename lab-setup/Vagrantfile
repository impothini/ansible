Vagrant.configure(2) do |config|
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  config.vm.define "ansible" do |ansible|

    config.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.name = "ansible-server"

    end
    ansible.vm.synced_folder "../", "/ansible_code", type: 'nfs'
#    ansible.vm.synced_folder "../ansibleserver", "/ansible_ansibleserver", type: 'nfs'
    ansible.vm.box = "ubuntu/trusty64"
    ansible.vm.hostname = "controller.mylab.com"
    ansible.vm.network :private_network, ip: "10.0.0.10"
    ansible.hostmanager.aliases = %w(controller)

    ansible.vm.provision "shell", inline: <<-SHELL

    sudo apt-get update
    sudo apt-get upgrade
    sudo apt-get dist-upgrade
    sudo apt-get install software-properties-common
    sudo apt-add-repository ppa:ansible/ansible
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt-get update
    sudo apt-cache policy docker-ce
    sudo apt-get install -y docker-ce
    sudo apt-get install git -y
    sudo git clone https://github.com/ansible/awx.git
    sudo apt-get install build-essential libssl-dev libffi-dev python-dev python-pip -y
    sudo apt-get install ansible -y
    sudo pip install docker-py
    sudo pip install --upgrade setuptools
    sudo pip install cryptography
    sudo pip install --upgrade ansible
    sudo cp /ansible_code/hosts /etc/ansible/hosts
    sudo cp /vagrant/id_rsa /root/.ssh/
    sudo cp /vagrant/id_rsa.pub /root/.ssh/
    sudo cp /vagrant/sshd_config /etc/ssh/sshd_config
    sudo cat /vagrant/id_rsa.pub >> /root/.ssh/authorized_keys
    sudo service ssh restart
    sudo chmod 400 /root/.ssh/id_rsa*
#    sudo ansible-playbook -i /home/vagrant/awx/installer/inventory /home/vagrant/awx/installer/install.yml
    SHELL

  end

  config.vm.define "app1" do |app1|
    config.vm.provider "virtualbox" do |v|
      v.name = "ansible-app1"
    end
    app1.vm.box = "ubuntu/trusty64"
    app1.vm.hostname = "app1.mylab.com"
    app1.vm.network :private_network, ip: "10.0.0.11"
    app1.hostmanager.aliases = %w(app1)
    app1.vm.provision "shell", inline: <<-SHELL
    sudo cp /vagrant/sshd_config /etc/ssh/sshd_config
    sudo cat /vagrant/id_rsa.pub >> /root/.ssh/authorized_keys
    sudo service ssh restart
    SHELL
  end

  config.vm.define "db1" do |db1|
    config.vm.provider "virtualbox" do |v|
      v.name = "ansible-db1"
    end
    db1.vm.box = "ubuntu/trusty64"
    db1.vm.hostname = "db1.mylab.com"
    db1.vm.network :private_network, ip: "10.0.0.12"
    db1.hostmanager.aliases = %w(db1)
    db1.vm.provision "shell", inline: <<-SHELL
    sudo cp /vagrant/sshd_config /etc/ssh/sshd_config
    sudo cat /vagrant/id_rsa.pub >> /root/.ssh/authorized_keys
    sudo service ssh restart
    SHELL

  end

  config.vm.define "web1" do |web1|
    config.vm.provider "virtualbox" do |v|
      v.name = "ansible-web1"
    end
    web1.vm.box = "ubuntu/trusty64"
    web1.vm.hostname = "web1.mylab.com"
    web1.vm.network :private_network, ip: "10.0.0.14"
    web1.hostmanager.aliases = %w(web1)
    web1.vm.provision "shell", inline: <<-SHELL
    sudo cp /vagrant/sshd_config /etc/ssh/sshd_config
    sudo cat /vagrant/id_rsa.pub >> /root/.ssh/authorized_keys
    sudo service ssh restart
    SHELL
  end

end
